<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--<context:annotation-config /> 这个标签可以省略，component-scan包含这个标签的作用-->

    <!-- DispatcherServlet上下文， 只管理@Controller类型的bean， 忽略其他型的bean, 如@Service -->
    <context:component-scan base-package="com.sevendegree.controller" annotation-config="true" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>	

    <!-- HandlerMapping, 无需配置， Spring MVC可以默认启动。
     DefaultAnnotationHandlerMapping 默认这个类
	annotation-driven HandlerMapping
	用于解析基于注解的annotationMapping-->

    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数
     url参数中的某个参数可以直接映射到Controller中某个方法的输入参数
    -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 静态资源处理， css， js， imgs  不配置就无法获取静态资源-->
    <!--<mvc:resources mapping="/resources/**" location="/resources/" /> -->

    <!-- 可以配置ViewResolver来对处理返回的页面。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 -->

    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="104857600"/> <!-- 10m -->
        <property name="maxInMemorySize" value="1048576" />
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>
    
    <mvc:interceptors>
        <!--定义在这里的，所有的都会被拦截 -->
        <mvc:interceptor>
            <!--/**包含该目录和所有子目录-->
            <!--<mvc:mapping path="/manage/**"/>-->
            <mvc:mapping path="/**"/>
            <!--<mvc:exclude-mapping path="/manage/user/login.do"/>-->
            <bean class="com.sevendegree.common.intercepter.AuthorityInterceptor"/>
            <!--<mvc:exclude-mapping path="/user/login.do"/>-->
        </mvc:interceptor>
    </mvc:interceptors>

</beans>
